const { POManager } = require('../pageobjects/POManager')
const {customtestmultipleproducts} = require('../utils/test-base')


customtestmultipleproducts('verify cart functionality - Computers + Camera + Apparel + Jewelry + Digital Downloads + Gift Cards', async ({ page, multipleproducts }) => {
    const poManager = new POManager(page)
    const landingPage = poManager.getlandingPage()
    const departmentPage = poManager.getdepartmentpage()
    const shoppingCartPage = poManager.getshoppingcartpage()
    const productNameList = []   
    await landingPage.goTo()
    await departmentPage.clickOnSubcategoryAndAddToCart("Computers","Notebooks",multipleproducts.productNameNotebook,multipleproducts.productQty)
    await departmentPage.clickOnSubcategoryAndAddToCart("Electronics","Camera & photo",multipleproducts.productNameElectronics,multipleproducts.productQty)
    await departmentPage.clickOnSubcategoryAndAddToCart("Apparel","Shoes",multipleproducts.productNameApparel,multipleproducts.productQty)
    await departmentPage.clickOnCategoryAndRent("Jewelry",multipleproducts.productNameJewelry,multipleproducts.rentStartDate,multipleproducts.rentEndDate,multipleproducts.productQty)
    await departmentPage.clickOnCategoryAndAddToCart("Digital downloads",multipleproducts.productNameDigitalDownloads,multipleproducts.productQty)
    await departmentPage.clickOnCategoryAndAddToCart("Gift Cards",multipleproducts.productNameGiftCard,multipleproducts.productQty)
    await departmentPage.clickOnShoppingCart()
    productNameList.push(multipleproducts.productNameNotebook)
    productNameList.push(await departmentPage.selectedCameraVariation())
    productNameList.push(multipleproducts.productNameApparel)
    productNameList.push(multipleproducts.productNameJewelry)
    productNameList.push(multipleproducts.productNameDigitalDownloads)
    productNameList.push(multipleproducts.prouctNameBooks)
    productNameList.push(multipleproducts.productNameGiftCard)
    await shoppingCartPage.productDetailsFromCartPage(productNameList,multipleproducts.productQty)
    await shoppingCartPage.updateCartWithProductDetails(multipleproducts.productNameNotebook,multipleproducts.modifiedProductQty)
    await shoppingCartPage.removeProductFromCart(multipleproducts.productNameJewelry)
})